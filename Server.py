import serial
import logging
import re
import time
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes

# Настройки
SERIAL_PORT = 'COM3'
BAUD_RATE = 9600
AUTHORIZED_CHAT_ID = -1002672194395
BOT_TOKEN = '7707947574:AAGL-e451TAaQAXiXGG0Jd33Fd9ABOxJau8'

ser = serial.Serial(SERIAL_PORT, BAUD_RATE)
logging.basicConfig(level=logging.INFO)

# Таблица шрифта 5x7 (остается без изменений)
FONT_5x7 = {
    'А': [
        "01110",
        "10001",
        "10001",
        "11111",
        "10001",
        "10001",
        "10001"
    ],
    'Б': [
        "11111",
        "10000",
        "10000",
        "11110",
        "10001",
        "10001",
        "11110"
    ],
    'В': [
        "11110",
        "10001",
        "10001",
        "11110",
        "10001",
        "10001",
        "11110"
    ],
    'Г': [
        "11111",
        "10000",
        "10000",
        "10000",
        "10000",
        "10000",
        "10000"
    ],
    'Д': [
        "01111",
        "01001",
        "01001",
        "01001",
        "01001",
        "11111",
        "10001"
    ],
    'Е': [
        "11111",
        "10000",
        "10000",
        "11110",
        "10000",
        "10000",
        "11111"
    ],
    'Ё': [
        "01010",
        "00000",
        "11111",
        "10000",
        "11110",
        "10000",
        "11111"
    ],
    'Ж': [
        "10101",
        "10101",
        "10101",
        "11111",
        "10101",
        "10101",
        "10101"
    ],
    'З': [
        "11110",
        "00001",
        "00001",
        "01110",
        "00001",
        "00001",
        "11110"
    ],
    'И': [
        "10001",
        "10001",
        "10011",
        "10101",
        "11001",
        "10001",
        "10001"
    ],
    'Й': [
        "00100",
        "01010",
        "10001",
        "10011",
        "10101",
        "11001",
        "10001"
    ],
    'К': [
        "10001",
        "10010",
        "10100",
        "11000",
        "10100",
        "10010",
        "10001"
    ],
    'Л': [
        "00111",
        "01001",
        "10001",
        "10001",
        "10001",
        "10001",
        "10001"
    ],
    'М': [
        "10001",
        "11011",
        "10101",
        "10101",
        "10001",
        "10001",
        "10001"
    ],
    'Н': [
        "10001",
        "10001",
        "10001",
        "11111",
        "10001",
        "10001",
        "10001"
    ],
    'О': [
        "01110",
        "10001",
        "10001",
        "10001",
        "10001",
        "10001",
        "01110"
    ],
    'П': [
        "11111",
        "10001",
        "10001",
        "10001",
        "10001",
        "10001",
        "10001"
    ],
    'Р': [
        "11110",
        "10001",
        "10001",
        "11110",
        "10000",
        "10000",
        "10000"
    ],
    'С': [
        "01111",
        "10000",
        "10000",
        "10000",
        "10000",
        "10000",
        "01111"
    ],
    'Т': [
        "11111",
        "00100",
        "00100",
        "00100",
        "00100",
        "00100",
        "00100"
    ],
    'У': [
        "10001",
        "10001",
        "10001",
        "01111",
        "00001",
        "00001",
        "11110"
    ],
    'Ф': [
        "00100",
        "01110",
        "10101",
        "11111",
        "10101",
        "01110",
        "00100"
    ],
    'Х': [
        "10001",
        "01010",
        "00100",
        "00100",
        "01010",
        "10001",
        "10001"
    ],
    'Ц': [
        "10001",
        "10001",
        "10001",
        "10001",
        "10001",
        "10001",
        "11111"
    ],
    'Ч': [
        "10001",
        "10001",
        "10001",
        "01111",
        "00001",
        "00001",
        "00001"
    ],
    'Ш': [
        "10101",
        "10101",
        "10101",
        "10101",
        "10101",
        "10101",
        "11111"
    ],
    'Щ': [
        "10101",
        "10101",
        "10101",
        "10101",
        "10101",
        "10101",
        "11111"
    ],
    'Ъ': [
        "11000",
        "01000",
        "01000",
        "01110",
        "01001",
        "01001",
        "01110"
    ],
    'Ы': [
        "10001",
        "10001",
        "10001",
        "11110",
        "10001",
        "10001",
        "11110"
    ],
    'Ь': [
        "10000",
        "10000",
        "10000",
        "11110",
        "10001",
        "10001",
        "11110"
    ],
    'Э': [
        "01110",
        "10001",
        "00001",
        "00111",
        "00001",
        "10001",
        "01110"
    ],
    'Ю': [
        "10110",
        "11001",
        "11001",
        "11111",
        "11001",
        "11001",
        "10110"
    ],
    'Я': [
        "01110",
        "10001",
        "10001",
        "01111",
        "00101",
        "01001",
        "10001"
    ],
    ' ': [
        "00000",
        "00000",
        "00000",
        "00000",
        "00000",
        "00000",
        "00000"
    ],
    'A': [
        "01110",
        "10001",
        "10001",
        "11111",
        "10001",
        "10001",
        "10001"
    ],
    'B': [
        "11110",
        "10001",
        "10001",
        "11110",
        "10001",
        "10001",
        "11110"
    ],
    'C': [
        "01110",
        "10001",
        "10000",
        "10000",
        "10000",
        "10001",
        "01110"
    ],
    'D': [
        "11110",
        "10001",
        "10001",
        "10001",
        "10001",
        "10001",
        "11110"
    ],
    'E': [
        "11111",
        "10000",
        "10000",
        "11110",
        "10000",
        "10000",
        "11111"
    ],
    'F': [
        "11111",
        "10000",
        "10000",
        "11110",
        "10000",
        "10000",
        "10000"
    ],
    'G': [
        "01110",
        "10001",
        "10000",
        "10111",
        "10001",
        "10001",
        "01110"
    ],
    'H': [
        "10001",
        "10001",
        "10001",
        "11111",
        "10001",
        "10001",
        "10001"
    ],
    'I': [
        "01110",
        "00100",
        "00100",
        "00100",
        "00100",
        "00100",
        "01110"
    ],
    'J': [
        "00001",
        "00001",
        "00001",
        "00001",
        "10001",
        "10001",
        "01110"
    ],
    'K': [
        "10001",
        "10010",
        "10100",
        "11000",
        "10100",
        "10010",
        "10001"
    ],
    'L': [
        "10000",
        "10000",
        "10000",
        "10000",
        "10000",
        "10000",
        "11111"
    ],
    'M': [
        "10001",
        "11011",
        "10101",
        "10101",
        "10001",
        "10001",
        "10001"
    ],
    'N': [
        "10001",
        "10001",
        "11001",
        "10101",
        "10011",
        "10001",
        "10001"
    ],
    'O': [
        "01110",
        "10001",
        "10001",
        "10001",
        "10001",
        "10001",
        "01110"
    ],
    'P': [
        "11110",
        "10001",
        "10001",
        "11110",
        "10000",
        "10000",
        "10000"
    ],
    'Q': [
        "01110",
        "10001",
        "10001",
        "10001",
        "10101",
        "10010",
        "01101"
    ],
    'R': [
        "11110",
        "10001",
        "10001",
        "11110",
        "10100",
        "10010",
        "10001"
    ],
    'S': [
        "01111",
        "10000",
        "10000",
        "01110",
        "00001",
        "00001",
        "11110"
    ],
    'T': [
        "11111",
        "00100",
        "00100",
        "00100",
        "00100",
        "00100",
        "00100"
    ],
    'U': [
        "10001",
        "10001",
        "10001",
        "10001",
        "10001",
        "10001",
        "01110"
    ],
    'V': [
        "10001",
        "10001",
        "10001",
        "10001",
        "10001",
        "01010",
        "00100"
    ],
    'W': [
        "10001",
        "10001",
        "10001",
        "10101",
        "10101",
        "10101",
        "01010"
    ],
    'X': [
        "10001",
        "10001",
        "01010",
        "00100",
        "01010",
        "10001",
        "10001"
    ],
    'Y': [
        "10001",
        "10001",
        "01010",
        "00100",
        "00100",
        "00100",
        "00100"
    ],
    'Z': [
        "11111",
        "00001",
        "00010",
        "00100",
        "01000",
        "10000",
        "11111"
    ],
    'a': [
        "00000",
        "00000",
        "01110",
        "00001",
        "01111",
        "10001",
        "01111"
    ],
    'b': [
        "10000",
        "10000",
        "10110",
        "11001",
        "10001",
        "10001",
        "11110"
    ],
    'c': [
        "00000",
        "00000",
        "01110",
        "10000",
        "10000",
        "10000",
        "01110"
    ],
    'd': [
        "00001",
        "00001",
        "01101",
        "10011",
        "10001",
        "10001",
        "01111"
    ],
    'e': [
        "00000",
        "00000",
        "01110",
        "10001",
        "11111",
        "10000",
        "01110"
    ],
    'f': [
        "00110",
        "01001",
        "01000",
        "11100",
        "01000",
        "01000",
        "01000"
    ],
    'g': [
        "00000",
        "01111",
        "10001",
        "10001",
        "01111",
        "00001",
        "11110"
    ],
    'h': [
        "10000",
        "10000",
        "10110",
        "11001",
        "10001",
        "10001",
        "10001"
    ],
    'i': [
        "00100",
        "00000",
        "01100",
        "00100",
        "00100",
        "00100",
        "01110"
    ],
    'j': [
        "00010",
        "00000",
        "00110",
        "00010",
        "00010",
        "10010",
        "01100"
    ],
    'k': [
        "10000",
        "10000",
        "10010",
        "10100",
        "11000",
        "10100",
        "10010"
    ],
    'l': [
        "11000",
        "01000",
        "01000",
        "01000",
        "01000",
        "01001",
        "00110"
    ],
    'm': [
        "00000",
        "00000",
        "11010",
        "10101",
        "10101",
        "10101",
        "10101"
    ],
    'n': [
        "00000",
        "00000",
        "10110",
        "11001",
        "10001",
        "10001",
        "10001"
    ],
    'o': [
        "00000",
        "00000",
        "01110",
        "10001",
        "10001",
        "10001",
        "01110"
    ],
    'p': [
        "00000",
        "11110",
        "10001",
        "10001",
        "11110",
        "10000",
        "10000"
    ],
    'q': [
        "00000",
        "01111",
        "10001",
        "10001",
        "01111",
        "00001",
        "00001"
    ],
    'r': [
        "00000",
        "10110",
        "11001",
        "10000",
        "10000",
        "10000",
        "10000"
    ],
    's': [
        "00000",
        "01111",
        "10000",
        "01110",
        "00001",
        "00001",
        "11110"
    ],
    't': [
        "01000",
        "01000",
        "11100",
        "01000",
        "01000",
        "01001",
        "00110"
    ],
    'u': [
        "00000",
        "00000",
        "10001",
        "10001",
        "10001",
        "10011",
        "01101"
    ],
    'v': [
        "00000",
        "00000",
        "10001",
        "10001",
        "10001",
        "01010",
        "00100"
    ],
    'w': [
        "00000",
        "00000",
        "10001",
        "10101",
        "10101",
        "10101",
        "01010"
    ],
    'x': [
        "00000",
        "00000",
        "10001",
        "01010",
        "00100",
        "01010",
        "10001"
    ],
    'y': [
        "00000",
        "10001",
        "10001",
        "01111",
        "00001",
        "00010",
        "11100"
    ],
    'z': [
        "00000",
        "11111",
        "00010",
        "00100",
        "01000",
        "10000",
        "11111"
    ],
    'а': [
        "00000",
        "00000",
        "01110",
        "00001",
        "01111",
        "10001",
        "01111"
    ],
    'б': [
        "00111",
        "01000",
        "11110",
        "10001",
        "00001",
        "10001",
        "01110"
    ],
    'в': [
        "00000",
        "00000",
        "11110",
        "10001",
        "11110",
        "10001",
        "11110"
    ],
    'г': [
        "00000",
        "00000",
        "11111",
        "10000",
        "10000",
        "10000",
        "10000"
    ],
    'д': [
        "00011",
        "00101",
        "00101",
        "00101",
        "00101",
        "11111",
        "10001"
    ],
    'е': [
        "00000",
        "00000",
        "01110",
        "10001",
        "11111",
        "10000",
        "01110"
    ],
    'ё': [
        "01010",
        "00000",
        "01110",
        "10001",
        "11111",
        "10000",
        "01110"
    ],
    'ж': [
        "00000",
        "10101",
        "10101",
        "11111",
        "10101",
        "10101",
        "10101"
    ],
    'з': [
        "00000",
        "01110",
        "00001",
        "00110",
        "00001",
        "00001",
        "01110"
    ],
    'и': [
        "00000",
        "00000",
        "10001",
        "10011",
        "10101",
        "11001",
        "10001"
    ],
    'й': [
        "00100",
        "01010",
        "10001",
        "10011",
        "10101",
        "11001",
        "10001"
    ],
    'к': [
        "00000",
        "00000",
        "10001",
        "10010",
        "11100",
        "10010",
        "10001"
    ],
    'л': [
        "00000",
        "00000",
        "00111",
        "01001",
        "10001",
        "10001",
        "10001"
    ],
    'м': [
        "00000",
        "00000",
        "10001",
        "11011",
        "10101",
        "10001",
        "10001"
    ],
    'н': [
        "00000",
        "00000",
        "10001",
        "10001",
        "11111",
        "10001",
        "10001"
    ],
    'о': [
        "00000",
        "00000",
        "01110",
        "10001",
        "10001",
        "10001",
        "01110"
    ],
    'п': [
        "00000",
        "00000",
        "11111",
        "10001",
        "10001",
        "10001",
        "10001"
    ],
    'р': [
        "00000",
        "11110",
        "10001",
        "10001",
        "11110",
        "10000",
        "10000"
    ],
    'с': [
        "00000",
        "00000",
        "01110",
        "10000",
        "10000",
        "10000",
        "01110"
    ],
    'т': [
        "00000",
        "00000",
        "11111",
        "00100",
        "00100",
        "00100",
        "00100"
    ],
    'у': [
        "00000",
        "00000",
        "10001",
        "10001",
        "01111",
        "00001",
        "11110"
    ],
    'ф': [
        "00100",
        "01110",
        "10101",
        "11111",
        "10101",
        "01110",
        "00100"
    ],
    'х': [
        "00000",
        "00000",
        "10001",
        "01010",
        "00100",
        "01010",
        "10001"
    ],
    'ц': [
        "00000",
        "10001",
        "10001",
        "10001",
        "10001",
        "10001",
        "11111"
    ],
    'ч': [
        "00000",
        "10001",
        "10001",
        "01111",
        "00001",
        "00001",
        "00001"
    ],
    'ш': [
        "00000",
        "10101",
        "10101",
        "10101",
        "10101",
        "10101",
        "11111"
    ],
    'щ': [
        "00000",
        "10101",
        "10101",
        "10101",
        "10101",
        "10101",
        "11111"
    ],
    'ъ': [
        "11000",
        "01000",
        "01000",
        "01110",
        "01001",
        "01001",
        "01110"
    ],
    'ы': [
        "00000",
        "10001",
        "10001",
        "11110",
        "10001",
        "10001",
        "11110"
    ],
    'ь': [
        "00000",
        "10000",
        "10000",
        "11110",
        "10001",
        "10001",
        "11110"
    ],
    'э': [
        "00000",
        "01110",
        "00001",
        "00111",
        "00001",
        "10001",
        "01110"
    ],
    'ю': [
        "00000",
        "10110",
        "11001",
        "11111",
        "11001",
        "11001",
        "10110"
    ],
    'я': [
        "00000",
        "01110",
        "10001",
        "01111",
        "00101",
        "01001",
        "10001"
    ]
}

def extract_commands(message_text: str):
    draw = []
    clear = []
    clear_all = False
    draw_all = False

    lines = message_text.strip().split('\n')
    for line in lines:
        line = line.strip().lower()
        if line == "/clear all":
            clear_all = True
        elif line == "/draw all":
            draw_all = True
        elif line.startswith("/draw") or line.startswith("/clear"):
            cmd_type = "draw" if line.startswith("/draw") else "clear"
            coords = re.findall(r"(\d{1,2}),(\d{1,2})", line)
            for x_str, y_str in coords:
                x, y = int(x_str), int(y_str)
                if 1 <= x <= 32 and 1 <= y <= 8:
                    if cmd_type == "draw":
                        draw.append(f"{x},{y}")
                    else:
                        clear.append(f"{x},{y}")
    return draw, clear, clear_all, draw_all

def send_commands_in_batches(command_type: str, coords: list, batch_size=10):
    for i in range(0, len(coords), batch_size):
        batch = coords[i:i + batch_size]
        command = f"{command_type} {' '.join(batch)}\n"
        ser.write(command.encode())
        time.sleep(0.005)

def clear_all_pixels():
    ser.write(b"clear all\n")

def draw_all_pixels():
    ser.write(b"draw all\n")

def text_to_pixel_coords(text, offset):
    coords = []
    x_offset = offset
    for char in text:
        if char not in FONT_5x7:
            char = ' '  # Заменяем неизвестные символы на пробел
        bitmap = FONT_5x7[char]
        for y in range(7):
            for x in range(5):
                if bitmap[y][x] == '1':
                    x_coord = x_offset + x + 1  # +1, т.к. координаты от 1
                    y_coord = y + 1
                    if 1 <= x_coord <= 32 and 1 <= y_coord <= 8:
                        coords.append(f"{x_coord},{y_coord}")
        x_offset += 6  # Между символами 1 пиксель
    return coords

def generate_scrolling_frames(text, display_width=32):
    """Генерирует все кадры для бегущей строки"""
    total_width = len(text) * 6  # 5 пикселей на символ + 1 пробел
    frames = []
    
    for shift in range(display_width + total_width):
        frame_coords = text_to_pixel_coords(text, display_width - shift)
        frames.append(frame_coords)
    
    return frames

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_chat.id != AUTHORIZED_CHAT_ID:
        await update.message.reply_text("Доступ запрещён.")
        return

    text = update.message.text.strip()

    # --- Обработка /print TEXT ---
    if text.lower().startswith("/print"):
        content = text[6:].strip()
        if not content:
            await update.message.reply_text("Нужно указать текст после /print")
            return

        # Генерируем все кадры анимации
        frames = generate_scrolling_frames(content)
        
        # Отправляем все кадры последовательно
        for frame in frames:
            # Очищаем весь экран одной командой
            clear_all_pixels()
            
            # Рисуем текущий кадр
            send_commands_in_batches("draw", frame)
            
            time.sleep(0.1)  # Задержка между кадрами
        
        return

    # --- Обработка /draw, /clear, /draw all, /clear all ---
    draw_coords, clear_coords, clear_all, draw_all = extract_commands(text)

    responses = []

    if clear_all:
        clear_all_pixels()
        responses.append("Очищена вся матрица.")
    elif draw_all:
        draw_all_pixels()
        responses.append("Закрашена вся матрица.")
    else:
        if draw_coords:
            send_commands_in_batches("draw", draw_coords)
            responses.append(f"Нарисовано {len(draw_coords)} пикселей.")

        if clear_coords:
            send_commands_in_batches("clear", clear_coords)
            responses.append(f"Очищено {len(clear_coords)} пикселей.")

    if responses:
        await update.message.reply_text('\n'.join(responses))
    else:
        await update.message.reply_text("Я не понял команду. Используй /draw x,y или /clear x,y или /draw all /clear all")

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.add_handler(MessageHandler(filters.COMMAND, handle_message))
    app.run_polling()

if __name__ == '__main__':
    main()